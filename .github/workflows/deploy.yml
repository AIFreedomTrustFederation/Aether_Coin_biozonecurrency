name: Deploy Aetherion

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-web3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Load secrets from FractalCoin/Filecoin
        uses: ./.github/actions/aetherion-wallet-deployment
        with:
          ipfs_hash: ${{ secrets.IPFS_HASH }}
      - run: npm ci
      - run: npm run build
      - name: Deploy to IPFS/Filecoin
        run: node scripts/deploy-to-web3.js
        env:
          WEB3_STORAGE_TOKEN: ${{ secrets.WEB3_STORAGE_TOKEN }}
          ENS_PRIVATE_KEY: ${{ secrets.ENS_PRIVATE_KEY }}
          ENS_DOMAIN: ${{ secrets.ENS_DOMAIN }}
      - name: Setup FractalCoin Integration
        if: ${{ secrets.SETUP_FILECOIN_INTEGRATION == 'true' }}
        run: node scripts/fractalcoin-filecoin-bridge.js
        env:
          FRACTALCOIN_API_KEY: ${{ secrets.FRACTALCOIN_API_KEY }}
          FRACTALCOIN_API_ENDPOINT: ${{ secrets.FRACTALCOIN_API_ENDPOINT }}

  deploy-traditional:
    runs-on: ubuntu-latest
    needs: deploy-web3
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run build
      - name: Prepare deployment package
        run: |
          tar -czf deploy-package.tar.gz dist server-redirect.js package.json
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEPLOY_SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to server
        run: |
          scp deploy-package.tar.gz ${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }}:~/
          ssh ${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }} << 'EOF'
            mkdir -p ~/aetherion
            tar -xzf deploy-package.tar.gz -C ~/aetherion
            cd ~/aetherion
            npm install --production
            if [ ! -f /etc/systemd/system/aetherion.service ]; then
              echo "Setting up systemd service..."
              sudo tee /etc/systemd/system/aetherion.service > /dev/null << 'SERVICEEOF'
          [Unit]
          Description=Aetherion UI Wallet
          After=network.target

          [Service]
          Type=simple
          User=$USER
          WorkingDirectory=$HOME/aetherion
          ExecStart=/usr/bin/node $HOME/aetherion/server-redirect.js
          Restart=on-failure
          Environment=PORT=3000
          Environment=NODE_ENV=production

          [Install]
          WantedBy=multi-user.target
          SERVICEEOF
              sudo systemctl daemon-reload
              sudo systemctl enable aetherion
            fi
            sudo systemctl restart aetherion
            if [ ! -f /etc/nginx/sites-available/aetherion ]; then
              echo "Setting up Nginx configuration..."
              sudo tee /etc/nginx/sites-available/aetherion > /dev/null << 'NGINXEOF'
          server {
              listen 80;
              server_name atc.aifreedomtrust.com;

              location /dapp {
                  proxy_pass http://localhost:3000/dapp;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
              }

              location /wallet {
                  proxy_pass http://localhost:3000/wallet;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
              }

              location = / {
                  return 301 /dapp;
              }

              location ~ /.well-known {
                  allow all;
              }
          }
          NGINXEOF
              sudo ln -sf /etc/nginx/sites-available/aetherion /etc/nginx/sites-enabled/
              sudo nginx -t
              sudo systemctl restart nginx
              sudo certbot --nginx -d atc.aifreedomtrust.com --non-interactive --agree-tos
            else
              sudo systemctl restart nginx
            fi
          EOF
        env:
          DEPLOY_SSH_HOST: ${{ secrets.DEPLOY_SSH_HOST }}
          DEPLOY_SSH_USER: ${{ secrets.DEPLOY_SSH_USER }}