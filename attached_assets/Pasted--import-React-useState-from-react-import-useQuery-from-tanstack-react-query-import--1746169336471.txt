
import React, { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Github, Star, GitFork, Code, ExternalLink } from "lucide-react";
import { Alert, AlertTitle, AlertDescription } from "@/components/ui/alert";

interface Repository {
  id: number;
  name: string;
  description: string;
  html_url: string;
  stargazers_count: number;
  forks_count: number;
  language: string;
  topics: string[];
  updated_at: string;
  owner: {
    login: string;
    avatar_url: string;
  };
}

const fetchRepositories = async (): Promise<Repository[]> => {
  // Using the GitHub API to fetch repositories from the AIFreedomTrustFederation account
  const response = await fetch("https://api.github.com/users/AIFreedomTrustFederation/repos");
  
  if (!response.ok) {
    throw new Error("Failed to fetch repositories");
  }
  
  return response.json();
};

const Index = () => {
  const [searchTerm, setSearchTerm] = useState("");
  
  const { data: repositories, isLoading, error } = useQuery({
    queryKey: ["repositories"],
    queryFn: fetchRepositories,
  });

  const filteredRepositories = repositories?.filter(repo => 
    repo.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    (repo.description && repo.description.toLowerCase().includes(searchTerm.toLowerCase())) ||
    (repo.language && repo.language.toLowerCase().includes(searchTerm.toLowerCase()))
  );

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString("en-US", {
      year: "numeric",
      month: "short",
      day: "numeric"
    });
  };

  return (
    <div className="container mx-auto py-8 px-4">
      <header className="mb-8 text-center">
        <div className="flex items-center justify-center mb-4">
          <Github className="h-10 w-10 mr-2" />
          <h1 className="text-3xl md:text-4xl font-bold">GitHub Repository Explorer</h1>
        </div>
        <p className="text-muted-foreground text-lg mb-6">
          Explore repositories from AIFreedomTrustFederation
        </p>
        
        <div className="max-w-md mx-auto">
          <Input
            placeholder="Search repositories..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="mb-6"
          />
        </div>
      </header>

      {isLoading && (
        <div className="flex justify-center my-12">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
        </div>
      )}

      {error && (
        <Alert variant="destructive" className="my-4">
          <AlertTitle>Error</AlertTitle>
          <AlertDescription>
            Failed to load repositories. Please try again later.
          </AlertDescription>
        </Alert>
      )}

      {!isLoading && !error && filteredRepositories?.length === 0 && (
        <Alert className="my-4">
          <AlertTitle>No repositories found</AlertTitle>
          <AlertDescription>
            No repositories match your search criteria.
          </AlertDescription>
        </Alert>
      )}

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredRepositories?.map((repo) => (
          <Card key={repo.id} className="flex flex-col h-full">
            <CardHeader>
              <CardTitle className="flex items-start justify-between">
                <span className="text-lg truncate">{repo.name}</span>
                {repo.language && (
                  <span className="text-xs bg-primary/10 text-primary px-2 py-1 rounded-full">
                    {repo.language}
                  </span>
                )}
              </CardTitle>
              <CardDescription className="line-clamp-2">
                {repo.description || "No description available"}
              </CardDescription>
            </CardHeader>
            <CardContent className="flex-grow">
              {repo.topics && repo.topics.length > 0 && (
                <div className="flex flex-wrap gap-2 mb-4">
                  {repo.topics.slice(0, 3).map((topic, index) => (
                    <span 
                      key={index} 
                      className="text-xs bg-secondary/50 px-2 py-1 rounded-full"
                    >
                      {topic}
                    </span>
                  ))}
                  {repo.topics.length > 3 && (
                    <span className="text-xs bg-secondary/50 px-2 py-1 rounded-full">
                      +{repo.topics.length - 3} more
                    </span>
                  )}
                </div>
              )}
              <p className="text-sm text-muted-foreground">
                Last updated: {formatDate(repo.updated_at)}
              </p>
            </CardContent>
            <CardFooter className="flex items-center justify-between pt-2 border-t">
              <div className="flex space-x-3">
                <span className="flex items-center text-sm text-muted-foreground">
                  <Star className="h-4 w-4 mr-1" /> {repo.stargazers_count}
                </span>
                <span className="flex items-center text-sm text-muted-foreground">
                  <GitFork className="h-4 w-4 mr-1" /> {repo.forks_count}
                </span>
              </div>
              <Button 
                variant="outline" 
                size="sm"
                asChild
              >
                <a href={repo.html_url} target="_blank" rel="noopener noreferrer" className="flex items-center">
                  <ExternalLink className="h-4 w-4 mr-2" /> View
                </a>
              </Button>
            </CardFooter>
          </Card>
        ))}
      </div>

      <footer className="mt-12 text-center text-sm text-muted-foreground">
        <p>
          Data fetched from the GitHub API. Click on a repository to view more details.
        </p>
      </footer>
    </div>
  );
};

export default Index;
