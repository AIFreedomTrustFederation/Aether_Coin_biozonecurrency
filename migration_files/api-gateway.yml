name: API Gateway Service CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'api-gateway/**'
      - '.github/workflows/api-gateway.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'api-gateway/**'
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: api-gateway/package-lock.json
      
      - name: Install dependencies
        working-directory: ./api-gateway
        run: npm ci
      
      - name: Run linter
        working-directory: ./api-gateway
        run: npm run lint
      
      - name: Run tests
        working-directory: ./api-gateway
        run: npm test
  
  build:
    name: Build
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: api-gateway/package-lock.json
      
      - name: Install dependencies
        working-directory: ./api-gateway
        run: npm ci
      
      - name: Build
        working-directory: ./api-gateway
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./api-gateway
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/scroll-keeper-api-gateway:${{ github.sha }},${{ secrets.DOCKER_HUB_USERNAME }}/scroll-keeper-api-gateway:latest
  
  deploy:
    name: Deploy
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            docker-compose pull api-gateway
            docker-compose up -d api-gateway
            docker system prune -af