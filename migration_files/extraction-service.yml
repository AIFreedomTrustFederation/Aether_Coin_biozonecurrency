name: Extraction Service CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'extraction-service/**'
      - 'server/services/scroll-keeper/**'
      - '.github/workflows/extraction-service.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'extraction-service/**'
      - 'server/services/scroll-keeper/**'
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: extraction-service/package-lock.json
      
      - name: Install dependencies
        working-directory: ./extraction-service
        run: npm ci
      
      - name: Run linter
        working-directory: ./extraction-service
        run: npm run lint
      
      - name: Run tests
        working-directory: ./extraction-service
        run: npm test
        env:
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
  
  build:
    name: Build
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: extraction-service/package-lock.json
      
      - name: Install dependencies
        working-directory: ./extraction-service
        run: npm ci
      
      - name: Build
        working-directory: ./extraction-service
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./extraction-service
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/scroll-keeper-extraction-service:${{ github.sha }},${{ secrets.DOCKER_HUB_USERNAME }}/scroll-keeper-extraction-service:latest
  
  deploy:
    name: Deploy
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            docker-compose pull extraction-service
            docker-compose up -d extraction-service
            docker system prune -af
      
      - name: Notify Deployment
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: good
          SLACK_MESSAGE: 'Extraction Service deployed to production :rocket:'
          SLACK_TITLE: Deployment Notification